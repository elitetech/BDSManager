@page
@model IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "Dashboard";
}
@Html.AntiForgeryToken()
<div>
    <div class="dropdown-menu dropdown-menu-sm dropdown-menu-dark" id="server-context-menu">
        <button class="dropdown-item" id="context-server-start">Start</button>
        <button class="dropdown-item" id="context-server-stop">Stop</button>
        <button class="dropdown-item" id="context-server-restart">Restart</button>
        <hr class="dropdown-divider">
        <button class="dropdown-item" id="context-server-backup">Backup</button>
        <button class="dropdown-item" id="context-server-restore">Restore</button>
        <button class="dropdown-item" id="context-server-configure">Configure</button>
        <button class="dropdown-item btn-link btn-danger" id="context-server-remove">Remove</button>
    </div>
    <div class="dropdown-menu dropdown-menu-sm dropdown-menu-dark" id="player-context-menu">
        <div class="dropdown dropend">
            <button class="dropdown-item dropdown-toggle" aria-labelledby="player-context-whitelist-menu" data-bs-toggle="dropdown" aria-expanded="false" id="context-player-whitelist">Whitelist</button>
            <div class="dropdown-menu dropdown-menu-sm dropdown-menu-dark" id="player-context-whitelist-menu">
                <button class="dropdown-item" id="context-player-whitelist-add">Add</button>
                <button class="dropdown-item" id="context-player-whitelist-remove">Remove</button>
            </div>
        </div>
        <div class="dropdown dropend">
            <button class="dropdown-item dropdown-toggle" aria-labelledby="player-context-permissions-menu" data-bs-toggle="dropdown" aria-expanded="false" id="context-player-permissions">Permissions</button>
            <div class="dropdown-menu dropdown-menu-sm dropdown-menu-dark" id="player-context-permissions-menu">
                <button class="dropdown-item" id="context-player-permissions-member">Member</button>
                <button class="dropdown-item" id="context-player-permissions-operator">Operator</button>
            </div>
        </div>
        <hr class="dropdown-divider">
        <button class="dropdown-item" id="context-player-kick">Kick</button>
    </div>
    <h3 class="display-6 text-center">Dashboard</h3>
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <a asp-page="/ManageServer" asp-route-createNew=true class="btn btn-dark float-end">Add Server</a>
                    <h4>Servers</h4>
                </div>
                <div class="card-body server-list">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Name</th>
                                <th>Port</th>
                                <th>Version</th>
                                <th>Players</th>
                                <th>Online</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var server in Model.Servers)
                            {
                                var online = Model.ServerInstances.Any(x => x.Path == server.Path);
                                <tr data-server-path="@server.Path" class="server-row">
                                    <td><img class="server-icon" src="https://www.minecraft.net/etc.clientlibs/minecraft/clientlibs/main/resources/favicon.ico" /> @server.Options.Name</td>
                                    <td>@server.Options.Port</td>
                                    <td>@server.Version</td>
                                    <td id="server-player-count-@server.Path">@server.Players.Where(x => x.Online).Count() / @server.Options.MaxPlayers</td>
                                    <td id="server-status-@server.Path" class="server-status" data-server-uptime="@server.LastStarted">@(online ? $"Online" : "Offline")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    @foreach (var server in Model.Servers)
    {
        var instance = Model.ServerInstances.FirstOrDefault(x => x.Path == server.Path);
        var online = instance != null;
        <br />
        <div id="server-details-@server.Path" class="server-details" style="display: none;">
            <div class="row">
                <div class="col-md-4 col-sm-12 col-12" style="padding-bottom: 20px;">
                    <div class="card">
                        <div class="card-header">
                            <h5>@server.Options.Name</h5>
                        </div>
                        <div class="card-body player-list">
                            <div id="players-target-@server.Path">
                                <table class="table table-responsive table-striped">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Last Seen</th>
                                        </tr>
                                    </thead>
                                    <tbody id="server-player-list-@server.Path">
                                        @foreach (var player in server.Players)
                                        {
                                            var lastSeen = player.Online ? "Now" 
                                                : player.LastSeen?.ToString("MM/dd/yyyy") == DateTime.Now.ToString("MM/dd/yyyy") ? player.LastSeen?.ToString("hh:mm:ss tt") 
                                                : player.LastSeen?.ToString("MM/dd/yyyy hh:mm tt");
                                            <tr class="player-row" data-player-xuid="@player.XUID" data-player-name="@player.Name" data-server-path="@server.Path">
                                                <td>@player.Name</td>
                                                <td>@lastSeen</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-8 col-sm-12 col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5>Console</h5>
                        </div>
                        <div class="card-body">
                            <ul id="console-window-@server.Path" class="console-content list-group">
                                @{
                                    if (online && instance != null)
                                    {
                                        foreach (var logEntry in instance.ConsoleOutput)
                                        {
                                            var timestamp = logEntry.Split(']')[0] + "]";
                                            <li class="console-line list-group-item" data-bs-toggle="tooltip" data-bs-placement="top" title="@timestamp">
                                                <span class="console-line-content">@logEntry.Replace(timestamp, "").Trim()</span>
                                            </li>
                                        }
                                    }
                                }
                            </ul>
                            <div class="input-group">
                                <input type="text" class="form-control" data-server-path="@server.Path" id="server-command-@server.Path" />
                                <button class="btn btn-secondary" data-server-path="@server.Path" onclick="sendCommandToHub(@server.Path)" disabled="@(!online)">Send</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
